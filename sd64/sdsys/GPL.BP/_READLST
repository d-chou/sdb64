* _READLST
* READLIST statement recursive code
* Copyright (c) 2006 Ladybridge Systems, All Rights Reserved
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 3, or (at your option)
* any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software Foundation,
* Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
* 
* 
* START-HISTORY:
* 19 Jan 04  0.6.1 SD launch. Earlier history details suppressed.
* END-HISTORY
*
*
* START-DESCRIPTION:
*
* END-DESCRIPTION
*
* START-CODE

$internal
$no.symbols
$no.xref
$recursive

subroutine readlst(tgt, list.no, status.code)

$include syscom.h
$include keys.h

   i = selectinfo(list.no, SL$COUNT)   ;* Also ensures partial list completed

   if i = 0 then            ;* No list active
      tgt = ""
      status.code = 1       ;* Take ELSE clause
   end else
      n = getrem(select.list(list.no))
      if n then tgt = select.list(list.no)[n+1, 99999999] ;* Part processed
      else tgt = select.list(list.no)                     ;* Unprocessed
      select.count(list.no) = 0
      select.list(list.no) = ''
      status.code = not(len(tgt) > 0)
   end

   return
end

* END-CODE
